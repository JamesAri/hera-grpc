syntax="proto3";

service ServiceDiscovery {
	rpc CreateSession(stream ClientSessionMessage) returns (stream RouterSessionMessage) {}

	rpc RegisterService(stream FileChunk) returns (RegisterServiceResult) {}

	rpc GetService(Request) returns (stream FileChunk) {}
}

message Connection {
	string host = 1;
	uint32 port = 2;
}

enum Action {
	CONNECT = 0;
	CONNECTED = 1;
	ERROR = 2;
}

message Data {
	string key = 1;
	string value = 2;
}

message Error {
	string message = 1;
}

message ClientSessionMessage {
	Action action = 1;
	optional uint64 client_id = 2;
	optional Connection connection = 3;
	optional Error error = 4;
}

message RouterSessionMessage {
	Action action = 1;
	optional bytes proto_file_chunk = 2;
	optional bool last_chunk = 3;
	optional Error error = 4;
}

message Request {
	uint64 client_id = 1;
	string path = 2;
	optional bool refetch_proto_file = 3;
}

message FileChunk {
	bytes proto_file_chunk = 1;
}

message RegisterServiceResult {
	bool success = 1;
	optional string message = 2;
}

